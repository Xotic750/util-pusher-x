{"version":3,"sources":["../src/util-pusher-x.js"],"names":[],"mappings":"AAAA;AACA;;AACA;;;;;;;;AAQA;AACA,IAAM,MAAM,GAAG,SAAS,MAAT,CAAgB,SAAhB,EAA2B,IAA3B,EAAiC;AAC9C,MAAM,GAAG,GAAG,SAAS,CAAC,MAAtB;AACA;;AACA,MAAM,MAAM,GAAG,SAAS,CAAC,MAAV,GAAmB,CAAnB,GAAuB,SAAS,CAAC,CAAD,CAAhC,GAAsC,EAArD;;AAEA,OAAK,IAAI,CAAC,GAAG,IAAI,IAAI,CAArB,EAAwB,CAAC,GAAG,GAA5B,EAAiC,CAAC,IAAI,CAAtC,EAAyC;AACvC,IAAA,MAAM,CAAC,MAAM,CAAC,MAAR,CAAN,GAAwB,SAAS,CAAC,CAAD,CAAjC;AACD;;AAED,SAAO,MAAP;AACD,CAVD;;AAYA,eAAe,MAAf","file":"util-pusher-x.esm.js","sourcesContent":["// eslint-disable jsdoc/no-undefined-types\n// noinspection JSCommentMatchesSignature\n/**\n * This pushes or concatenates into a new or existing array.\n *\n * @param {Array} arrayLike - The source.\n * @param {number} [from=0] - The from source index.\n * @param {Array} [target=[]] - The target array.\n * @returns {*} The target array.\n */\n// eslint-enable jsdoc/no-undefined-types\nconst pusher = function pusher(arrayLike, from) {\n  const len = arrayLike.length;\n  /* eslint-disable-next-line prefer-rest-params */\n  const target = arguments.length > 2 ? arguments[2] : [];\n\n  for (let i = from || 0; i < len; i += 1) {\n    target[target.length] = arrayLike[i];\n  }\n\n  return target;\n};\n\nexport default pusher;\n"]}